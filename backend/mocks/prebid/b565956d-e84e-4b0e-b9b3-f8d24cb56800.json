{
	"id": "238D8BFC-6716-4147-B00A-29DBF8C95B6B",
	"seatbid": [{
		"bid": [{
			"id": "d8f6fdbb-8b8f-4c18-90cd-0e2c53ab7dd3",
			"impid": "7C06F595-97B4-4E41-BA0B-BDBC2AC1DC26",
			"price": 0.15,
			"adm": "<script src=\"https://10.0.2.2:8000/static/omid-validation-verification-script-v1.js\"></script>\n<script src=\"mraid.js\"></script> \n\n<div id=\"container\" style=\"width:100%;height:100%;background-color:#000000;\">\t\n\t<video playsinline webkit-playsinline controls id=\"adVideo\" src=\"https://ssl-i.cdn.openx.com/mobile/iab_mraid_compliance_creatives/resources/video.mp4\" width=\"100%\" height=\"100%\"></video>\t\t\n</div>\n\n<style type=\"text/css\">\nbody\n{\n\tbackground-color:#000000;\n}\n</style>\n\n<script language=\"javascript\" type=\"text/javascript\">\ndocument.getElementById(\"container\").addEventListener('touchmove', function(event) { event.preventDefault(); }, false);\n</script>\n\n<script>\nfunction mraidIsReady()\n{\n\tmraid.removeEventListener(\"ready\", mraidIsReady);\n\t\n\tprepareMyAd();\n}\n\nfunction prepareMyAd()\n{\t\n\t// Right now it is assumed this SDK supports HTML5 video but may not support inline\n\tif (mraid.supports(\"inlineVideo\"))\n\t{\n\t\t// Hide close button\n\t\tmraid.useCustomClose(true);\n\t}\n\t\n\t// Force landscape orientation\n\tmraid.setOrientationProperties({\"allowOrientationChange\":false, \"forceOrientation\":\"landscape\"});\n\t\n\t// Add event listeners\n\tmraid.addEventListener(\"stateChange\", handleStateChanged);\n\tmraid.addEventListener(\"error\", errorHandler); \n\t\t\n\t// See if ad is visible yet otherwise wait for it to be visible.\n\tif (!mraid.isViewable())\n\t{\n\t\tmraid.addEventListener(\"viewableChange\", isInterstitialDisplayed); \n\t}\n\telse\n\t{\n\t\tmraid.addEventListener(\"viewableChange\", viewableChangeAfterDisplay);\n\t\tshowMyAd();\n\t}\n}\n\nfunction handleStateChanged(state)\n{\t\n\tlogMRAIDMessage(\"state change event fired!: state = \" + state);\n\t\n\tif (state == \"hidden\")\n\t{\n\t\tlogMRAIDMessage(\"Interstitial has become hidden which means interstitial was closed.\");\n\t\t\n\t\t// Make sure to pause video in case it takes time for the web view to be destroyed after getting hidden.\n\t\tvar video = document.getElementById(\"adVideo\");\n\t\tif (video && !video.paused) \n\t\t{\n    \t\tvideo.pause();\n\t\t}\n\t}\n}\n\nfunction errorHandler(message, action)\n{\t\n\tlogMRAIDMessage(\"error event fired!: message = \" + message + \", action = \" + action);\n}\n\nfunction logMRAIDMessage(message)\n{\n\t// Replace this method with whatever logging best works for your test environment\n\tconsole.log(\"MRAID: \" + message);\n}\n\nfunction isInterstitialDisplayed(displayed)\n{\t\n\tif (displayed)\n\t{\n\t\tmraid.removeEventListener(\"viewableChange\", isInterstitialDisplayed);\n\t\tmraid.addEventListener(\"viewableChange\", viewableChangeAfterDisplay);\n\t\tshowMyAd();\n\t}\n}\n\nfunction viewableChangeAfterDisplay(visible)\n{\n\t// This makes sure the video pauses/resumes on any visibility changes\n\tvar video = document.getElementById(\"adVideo\");\n\tif (!visible)\n\t{\t\n\t\tlogMRAIDMessage(\"Interstitial has become not viewable after having been displayed.\");\n\t\tif (video && !video.paused) \n\t\t{\n    \t\tvideo.pause();\n\t\t}\n\t}\n\telse\n\t{\n\t\tlogMRAIDMessage(\"Interstitial has become viewable again after having been displayed.\");\n\t\tif (video && video.paused) \n\t\t{\n    \t\tvideo.play();\n\t\t}\n\t}\n}\n\nfunction showMyAd()\n{\n\t// Adjust dimensions to current position width/height. Since this is being called on display this should represent the size of the ad after locking to landscape orientation.\n\tvar currentPosition = mraid.getCurrentPosition();\n\tvar landscapeWidth = currentPosition.width;\n\tvar landscapeHeight = currentPosition.height;\n\tlogMRAIDMessage(\"Reported current ad size: width = \" + landscapeWidth + \", height = \" + landscapeHeight);\n\t\n\tdocument.getElementById(\"container\").style.width = landscapeWidth + \"px\";\n\tdocument.getElementById(\"container\").style.height = landscapeHeight + \"px\";\n\t\n\t// First video to fit full width and and then scale height\n\tvar videoWidth = 320;\n\tvar videoHeight = 180;\n\tvar videoRatio = videoWidth/videoHeight;\n\tvar newWidth = videoWidth;\n\tvar newHeight = videoHeight;\n\tif(videoWidth > landscapeWidth)\n\t{\n\t\tnewWidth = landscapeWidth;\n\t\tnewHeight = newWidth/videoRatio;\n\t}\n\telse\n\t{\n\t\tnewWidth = Math.max(landscapeWidth, videoWidth);\n\t\tnewHeight = newWidth/videoRatio;\n\t}\n\t\n\t// If scaled height too big then scale back until it fits\n\tif (newHeight > landscapeHeight)\n\t{\n\t\tvideoRatio = videoHeight/videoWidth;\n\t\t\n\t\tnewHeight = landscapeHeight;\n\t\tnewWidth = newHeight/videoRatio;\n\t}\n\n\t// Calculate margins to center\n\tvar topBottomMargins = (landscapeHeight - newHeight)/2.0;\n\tvar leftRightMargins = (landscapeWidth - newWidth)/2.0;\n\t\n\t// Update video dimensions\n\tvar video = document.getElementById(\"adVideo\");\n\tvideo.style.width = newWidth + \"px\";\n\tvideo.style.height = newHeight + \"px\";\n\tvideo.style.margin = topBottomMargins + \"px \" + leftRightMargins + \"px\";\n\t\n    // Count impressions at this point and play video ad\n    video.play();\n    \n    // Any clicks will restart the video if paused\n    video.addEventListener('click', function()\n\t{\n\t\tvar video = document.getElementById(\"adVideo\");\n\t\tif (video && video.paused) \n\t\t{\n    \t\tvideo.play();\n\t\t}\n\t});\n    \n    // If we can play inline then we can auto close the ad on finish\n    if (mraid.supports(\"inlineVideo\"))\n\t{\n\t\t// Close video on finish\n\t\tvideo.addEventListener('ended', function()\n\t\t{\n\t\t\tmraid.close();\n\t\t});\n\t}\n}\n\nfunction setupViewport()\n{\n\tvar element = document.querySelector(\"meta[name=viewport]\");\n\tif (!element)\n\t{\n\t\telement = document.createElement(\"meta\");\n\t\telement.name = \"viewport\";\n\t\telement.content = \"width=device-width,user-scalable=no,initial-scale=1,maximum-scale=1\";\n\t\tdocument.getElementsByTagName('head')[0].appendChild(element);\n\t}\n\telse\n\t{\n\t\telement.content = \"width=device-width,user-scalable=no,initial-scale=1,maximum-scale=1\";\n\t}\n}\nsetupViewport();\n\nfunction doReadyCheck()\n{\t\n\tif (mraid.getState() == 'loading') \n\t{\t\n\t\tmraid.addEventListener(\"ready\", mraidIsReady);  \n\t} \n\telse\n\t{ \t\n\t\tprepareMyAd();      \n\t}\n}\n\ndoReadyCheck();\n</script><script type=\"text/javascript\">\n(function(){\n  var supportMraid = window.mraid;\n  var isMraid = false;\n  document.querySelectorAll('script').forEach(function(item) {\n    if (item.src.match('mraid.js')) isMraid = true;\n  });  \n  if (supportMraid && isMraid) {\n    mraid.isViewable() ? track() : mraid.addEventListener('viewableChange', function() {\n      mraid.isViewable() && track();\n    });\n  } else if (!isMraid) track();\n\n  function track() {\n    var pixel = new Image();\n    pixel.src = 'https://rtb-europe-west1.openx.net/win/prebid?p=FIRST&t=2DAABBgABAAECAAIBAAsAAgAAAJscGApjdzRkbFluaWNPHBa4qLq70Lmh6pYBFrekobCb6fvPngEAHBbPz4XHjpGBiU4W2YikxfX0-LLeAQAWxN_49wsVBgAsHBUCABwVAgAAHCau4ZWFBBUOFQImuKHxgwQWoICcgATWrAIAHCaew6CABBaEovGDBBa24ZWFBBaw4ZWFBBUUHBTABxSABQAVBBUIFqwCJqwCRQgAAAA&ph=a51065ab-17ee-4394-b5a7-32debc04780a';\n    track = function(){};\n  }\n})();\n</script>\n",
			"crid": "542292059",
			"w": 320,
			"h": 480,
			"ext": {
				"prebid": {
					"cache": {
						"key": "",
						"url": "",
						"bids": {
							"url": "prebid.openx.net/cache?uuid=ccd93e1b-46c1-4a95-92b2-cbcfa5f44f0a",
							"cacheId": "ccd93e1b-46c1-4a95-92b2-cbcfa5f44f0a"
						}
					},
					"targeting": {
						"hb_bidder": "openx",
						"hb_bidder_openx": "openx",
						"hb_cache_host": "prebid.openx.net",
						"hb_cache_host_openx": "prebid.openx.net",
						"hb_cache_id": "ccd93e1b-46c1-4a95-92b2-cbcfa5f44f0a",
						"hb_cache_id_openx": "ccd93e1b-46c1-4a95-92b2-cbcfa5f44f0a",
						"hb_cache_path": "/cache",
						"hb_cache_path_openx": "/cache",
						"hb_env": "mobile-app",
						"hb_env_openx": "mobile-app",
						"hb_pb": "0.10",
						"hb_pb_openx": "0.10",
						"hb_size": "320x480",
						"hb_size_openx": "320x480"
					},
					"type": "banner"
				}
			}
		}],
		"seat": "openx"
	}],
	"cur": "USD",
	"ext": {
		"responsetimemillis": {
			"openx": 48
		}
	}
}
